grammar com.lowcoupling.mdpm.lng.wbs.WBS with org.eclipse.xtext.common.Terminals hidden(WS, SL_COMMENT)

generate wBS "http://www.lowcoupling.com/mdpm/lng/wbs/WBS"
import "http://www.lowcoupling.com/lng/rml/RML" as rml


WBS:
	WBSProgram|WBSProject
;

WBSProgram:
	description=ML_COMMENT?
	'Program ' name= ID 
	 OPENCURLY
	 (requirementsModel+=RequirementImport ENDLINE)*	
	 (projects+=WBSProject)*
	 ('requirements'OPENCURLY	 	
	 	(requirements+= [rml::REQNode|QualifiedName]ENDLINE)*
	 CLOSEDCURLY)?
	 CLOSEDCURLY
;
	
 WBSProject:
 	description=ML_COMMENT?
	'Project ' name= ID OPENCURLY
	 (requirementsModel+=RequirementImport ENDLINE)*	
	 (wbsNodes+=WBSNode)*
	 ('requirements'OPENCURLY
	 	(requirements+= [rml::REQNode|QualifiedName]ENDLINE)*
	 CLOSEDCURLY)?
	 CLOSEDCURLY
;

WBSNode:
	WBSActivity|
	WBSWorkPackage|
	WBSDeliverable
;

WBSActivity:
	description=ML_COMMENT?
	'Activity ' name= ID (
	( 
			OPENCURLY
				(wbsNodes+=WBSNode*)
				('requirements'OPENCURLY
	 			(requirements+= [rml::REQNode|QualifiedName]ENDLINE)*
	 			CLOSEDCURLY)?
			CLOSEDCURLY 
	) | ENDLINE)
;

WBSWorkPackage:
	description=ML_COMMENT?
	'WorkPackage ' name= ID (
	( 
			OPENCURLY
				(wbsNodes+=WBSNode*)
				('requirements'OPENCURLY
	 			(requirements+= [rml::REQNode|QualifiedName]ENDLINE)*
			    CLOSEDCURLY)?
			CLOSEDCURLY 
	) | ENDLINE)
;
WBSDeliverable:
	description=ML_COMMENT?
	'Deliverable ' name= ID (
	( 
			OPENCURLY
				//(workpackages+=WorkPackage*)
				(wbsNodes+=WBSNode*)
				('requirements'OPENCURLY
	 			(requirements+= [rml::REQNode|QualifiedName]ENDLINE)*
	 			CLOSEDCURLY)?
			CLOSEDCURLY 
	) | ENDLINE)
;

QualifiedName:
    ID ('.' ID)*;

RequirementImport :
 'req_import' importURI=STRING  // feature must be named importURI
 ;
 

    
terminal ENDLINE :';'; 
terminal OPENCURLY :
	'{'
;
terminal CLOSEDCURLY :
	'}'
;
